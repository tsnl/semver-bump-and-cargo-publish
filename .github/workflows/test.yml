name: Test Action

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_type:
        description: "Type of test to run"
        required: true
        default: "dry-run"
        type: choice
        options:
          - dry-run
          - validation-only

jobs:
  test-action:
    name: Test Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout test repository
        uses: actions/checkout@v4
        with:
          repository: rust-lang/mdBook
          ref: master
          fetch-depth: 0

      - name: Test action with dry run
        id: test
        uses: ./
        with:
          branch: master
          bump_type: patch
          dry_run: true
          cargo_registry_token: fake-token
          pat_token: ${{ secrets.GITHUB_TOKEN }}
          rust_toolchain: stable
          git_user_email: test@example.com
          git_user_name: Test Bot
          # Don't wait for checks in test
          wait_for_checks: ""

      - name: Verify outputs
        run: |
          echo "Package name: ${{ steps.test.outputs.package_name }}"
          echo "Old version: ${{ steps.test.outputs.old_version }}"
          echo "New version: ${{ steps.test.outputs.new_version }}"
          echo "Tag name: ${{ steps.test.outputs.tag_name }}"
          echo "Published: ${{ steps.test.outputs.published }}"

          # Verify outputs are not empty
          if [ -z "${{ steps.test.outputs.package_name }}" ]; then
            echo "❌ package_name output is empty"
            exit 1
          fi

          if [ -z "${{ steps.test.outputs.new_version }}" ]; then
            echo "❌ new_version output is empty"
            exit 1
          fi

          if [ "${{ steps.test.outputs.published }}" != "false" ]; then
            echo "❌ published should be false in dry run mode"
            exit 1
          fi

          echo "✅ All outputs are valid"

      - name: Test input validation
        uses: ./
        with:
          branch: master
          bump_type: invalid
          dry_run: true
          cargo_registry_token: fake-token
          pat_token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        id: validation_test

      - name: Verify validation failed
        run: |
          if [ "${{ steps.validation_test.outcome }}" = "success" ]; then
            echo "❌ Action should have failed with invalid bump_type"
            exit 1
          fi
          echo "✅ Input validation works correctly"
